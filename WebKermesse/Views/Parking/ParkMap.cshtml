@model WebKermesse.Models.ParkingViewModel

@{
    ViewBag.Title = "ParkMap";
}

<style>
    /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
    #map {
        height: 750px;
        width: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin-top: 30px;
        padding: 0;
    }

    .controls {
        margin-top: 10px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    }

    #origin-input,
    #destination-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 200px;
    }

        #origin-input:focus,
        #destination-input:focus {
            border-color: #4d90fe;
        }

    #mode-selector {
        color: #fff;
        background-color: #4d90fe;
        margin-left: 12px;
        padding: 5px 11px 0px 11px;
    }

        #mode-selector label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }
</style>

<h2>Cartes des Parkings</h2>

<div id="map"></div>

<script>


        function initMap() {
            // récupération des informations émises par MapController-->Index : Libelle, Adresse, Id de chaque évent
            var ListNameEvent = @Html.Raw(Json.Encode(ViewData["ListNamePark"]));
            var ListLatitudePark = @Html.Raw(Json.Encode(ViewData["ListLatitudePark"]));
            var ListLongitudePark = @Html.Raw(Json.Encode(ViewData["ListLongitudePark"]));
            var ListFreePark = @Html.Raw(Json.Encode(ViewData["ListFreePark"]));
            // création d'un tableau vide contenant les emplacements
            var locations = [];
            for (var j = 0; j < ListNameEvent.length; j++) {
                //insertion des infos dans le tableau
                locations.push([ListNameEvent[j], ListLatitudePark[j], ListLongitudePark[j], ListFreePark[j]])
            }

            // création d'une carte centrée sur Rennes mis en place sur l'élément avec div-ID ='map'
            var map = new google.maps.Map(document.getElementById('map'), {
                mapTypeControl: false,
                center: { lat: 48.109771, lng: -1.679117 },
                zoom: 13
            });
            //déclaration du InfoWindow pour les contenu des markers
            var infowindow = new google.maps.InfoWindow();
            //déclaration du géocoder qui permet de récupérer les coordonnées d'un point par une recherche de l'adresse
            var geocoder = new google.maps.Geocoder();
            var marker, i;

            //insertion de chaque emplacements
            for (i = 0; i < locations.length; i++) {
                var infoName = locations[i][0];
                var infoFree = locations[i][3];
                var markerContent = "<b>" + infoName + "</b>" + "<br> Place restantes: " + infoFree;
                var f = parseInt(infoFree);
                if (f <= 100) {
                    createMarkerOrange(locations[i][1], locations[i][2], markerContent);
                } else {
                    createMarker(locations[i][1], locations[i][2], markerContent);
                }
                //création du marker avec les infos de contenu
               
                //geocodeAddress(locations[i]);
            }

            //création du marker
            function createMarker(lat,lng, html) {
                console.log(lat,lng);
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(lat,lng),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "/Content/images/location-car.png",
                        scaledSize: new google.maps.Size(45, 45)
                    }
                });
                //ajout d'un événement lorsqu'on clique sur le marker
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.setContent(html);
                    infowindow.open(map, marker);
                });
            }
            function createMarkerOrange(lat, lng, html) {
                console.log(lat, lng);
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(lat, lng),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    icon: {
                        url: "/Content/images/location-car-orange.png",
                        scaledSize: new google.maps.Size(45, 45)
                    }
                });
                //ajout d'un événement lorsqu'on clique sur le marker
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.setContent(html);
                    infowindow.open(map, marker);
                });
            }
        }



</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB67MlViEjryRDO6eCtCF3mQzV2vyExT_Y&libraries=places&callback=initMap"
        async defer></script>


